server:
  servlet:
    context-path: /api/user

spring:
  config:
    import: classpath:password.yml

  datasource:
    url: jdbc:h2:./h2/member-test;AUTO_SERVER=true;mode=MYSQL;
    username: sa

  sql:
    init:
      mode: always
      platform: h2
      # 아래 값을 작성 해야 /src/main/resource/*.sql을 실행 하지 않음
      schema-locations: classpath:/schema-h2.sql

  jpa:
    hibernate:
      ddl-auto: none
    defer-datasource-initialization: true
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        highlight_sql: true

  # 통합 테스트(main/java/config/SecurityConfig 사용)를 위한 h2-console 설정
  h2:
    console:
      enabled: true
      
  data:
    redis:
      host: localhost
      port: 6379
      database: 10

  mail:
    protocol: smtp
    host: smtp.gmail.com
    port: 465
    username: gimwlgus@gmail.com
    password: ${email.password.gmail}
    default-encoding: UTF-8
    properties:
      debug: true
      mail:
        smtp:
          auth: true
          ssl:
            enable: true
            trust: smtp.gmail.com
          starttls:
            enable: true

  security:
    debug: false


logging:
  level:
    org.hibernate.sql: debug
    org.springframework.security: debug

---

swagger:
  server: http://localhost:8080

client:
  server: http://localhost:8080

sign-up:
  key:
    session: "SESSION_ID:" # SessionUserServiceImpl
    email: "EMAIL:"        # EmailAuthDto.getEmail()
    nickname: "NICKNAME:"  # NicknameDto.getNickname()
  email:
    expire: 300 # TimeUnit: Second
  session:
    expire: 5 # TimeUnit: Minute
  admin:
    gimwlgus@gmail.com,
    gimwlgus@daum.net

withdrawal:
  cron: "0/5 * * * * *" # 5초마다 삭제 실행
  expiration-time: 10
  expiration-time-unit: s # d: Day , h: Hour, m: Minute, s: Second

token:
  expiration-time: 30
  expiration-time-unit: d # d: Day , h: Hour, m: Minute, s: Second
  secret: VGhpc2lzSnd0U2VjcmV0S2V5Rm9yU2ltcGxlQm9hcmQwMlByb2plY3RNYWRlQnlaaHl1bktpbU9yV2xndXNLaW0=
